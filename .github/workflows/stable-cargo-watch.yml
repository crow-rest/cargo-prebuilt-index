name: cargo-watch stable build

on:
  push:
    branches: [ trigger/stable ]
  workflow_dispatch:

env:
  index: https://github.com/crow-rest/cargo-prebuilt-index/releases/download/stable-index/
  crate: cargo-watch
  version: 8.2.2
  dl: https://static.crates.io/crates/cargo-watch/cargo-watch-8.2.2.crate
  checksum: 1cb6063f07fc41909f8121233dabaf53787c6cb8d867906e3d2ca0ab1cc09da7
  bins: cargo-watch

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ahmadnassri/action-workflow-queue@v1.1.0
        with:
          timeout: 10800000
      - name: Create Folders
        run: |
          mkdir -p ~/.cargo/registry/index
          mkdir -p ~/.cargo/registry/cache
          mkdir -p ~/.cargo/git/db
          mkdir -p ./bundle/build
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            ~/.cargo/git/db
          key: ${{ runner.os }}-${{ env.crate }}-${{ env.version }}-stable-deps
      - name: Download crate and check hash
        run: |
          wget ${{ env.dl }}
          echo "${{ env.checksum }} ${{ env.crate }}-${{ env.version }}.crate" | sha256sum -c
          tar -xf ${{ env.crate }}-${{ env.version }}.crate
          mv ${{ env.crate }}-${{ env.version }}/* bundle/build
      - name: Download Deps
        working-directory: ./bundle/build
        run: cargo fetch --verbose
      - name: Bundle Deps
        run: |
          mkdir -p ./bundle/store/registry
          mkdir -p ./bundle/store/git
          cp -r ~/.cargo/registry/index ./bundle/store/registry/index
          cp -r ~/.cargo/registry/cache ./bundle/store/registry/cache
          cp -r ~/.cargo/git/db ./bundle/store/git/db
      - name: Store crate and crate deps
        uses: actions/upload-artifact@v3
        with:
          name: crate
          path: bundle
          retention-days: 1

  x86_64-unknown-linux-gnu:
    runs-on: ubuntu-latest
    needs: [ setup ]
    steps:
      - uses: actions/checkout@v3
      - name: Download crate and deps
        uses: actions/download-artifact@v3
        with:
          name: crate
      - name: Move deps
        run: mv ./store/* ~/.cargo
      - uses: actions/cache@v3
        with:
          path: |
           build/target
          key: ${{ runner.os }}-${{ env.crate }}-${{ env.version }}-stable-x86_64-unknown-linux-gnu
      - name: Update Rust
        run: rustup update
      - name: Rust Version
        run: rustc --version
      - name: Build crate
        working-directory: ./build
        run: cargo build --verbose --release 
      - name: Collect
        run: ./scripts/collect.py x86_64-unknown-linux-gnu ./build/target/release ${{ env.bins }}
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: x86_64-unknown-linux-gnu
          path: |
            x86_64-unknown-linux-gnu.tar.gz
            x86_64-unknown-linux-gnu.sha256
      - name: Release Artifact
        if: True
        uses: svenstaro/upload-release-action@2.4.0
        with:
          tag: ${{ env.crate }}-${{ env.version }}
          release_name: ${{ env.crate }}-${{ env.version }}
          overwrite: true
          prerelease: true
          file_glob: true
          file: x86_64-unknown-linux-gnu.*

  x86_64-apple-darwin:
    runs-on: macos-12
    needs: [ setup ]
    steps:
      - uses: actions/checkout@v3
      - name: Download crate and deps
        uses: actions/download-artifact@v3
        with:
          name: crate
      - name: Move deps
        run: mv ./store/* ~/.cargo
      - uses: actions/cache@v3
        with:
          path: |
           build/target
          key: ${{ runner.os }}-${{ env.crate }}-${{ env.version }}-stable-x86_64-apple-darwin
      - name: Get pkgs
        run: brew install coreutils
      - name: Update Rust
        run: rustup update
      - name: Rust Version
        run: rustc --version
      - name: Build crate
        working-directory: ./build
        run: cargo build --verbose --release 
      - name: Collect
        run: ./scripts/collect.py x86_64-apple-darwin ./build/target/release ${{ env.bins }}
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: x86_64-apple-darwin
          path: |
            x86_64-apple-darwin.tar.gz
            x86_64-apple-darwin.sha256
      - name: Release Artifact
        if: True
        uses: svenstaro/upload-release-action@2.4.0
        with:
          tag: ${{ env.crate }}-${{ env.version }}
          release_name: ${{ env.crate }}-${{ env.version }}
          overwrite: true
          prerelease: true
          file_glob: true
          file: x86_64-apple-darwin.*

  aarch64-apple-darwin:
    runs-on: macos-12
    needs: [ setup ]
    steps:
      - uses: actions/checkout@v3
      - name: Download crate and deps
        uses: actions/download-artifact@v3
        with:
          name: crate
      - name: Move deps
        run: mv ./store/* ~/.cargo
      - uses: actions/cache@v3
        with:
          path: |
           build/target
          key: ${{ runner.os }}-${{ env.crate }}-${{ env.version }}-stable-aarch64-apple-darwin
      - name: Get pkgs
        run: brew install coreutils
      - name: Update Rust
        run: rustup update
      - name: Rust Version
        run: rustc --version
      - name: Add Rust target
        run: rustup target add aarch64-apple-darwin
      - name: Build crate
        working-directory: ./build
        run: cargo build --verbose --release --target aarch64-apple-darwin 
      - name: Collect
        run: ./scripts/collect.py aarch64-apple-darwin ./build/target/aarch64-apple-darwin/release ${{ env.bins }}
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: aarch64-apple-darwin
          path: |
            aarch64-apple-darwin.tar.gz
            aarch64-apple-darwin.sha256
      - name: Release Artifact
        if: True
        uses: svenstaro/upload-release-action@2.4.0
        with:
          tag: ${{ env.crate }}-${{ env.version }}
          release_name: ${{ env.crate }}-${{ env.version }}
          overwrite: true
          prerelease: true
          file_glob: true
          file: aarch64-apple-darwin.*

  x86_64-pc-windows-msvc:
    runs-on: windows-latest
    needs: [ setup ]
    steps:
      - uses: actions/checkout@v3
      - name: Download crate and deps
        uses: actions/download-artifact@v3
        with:
          name: crate
      - name: Move deps
        run: mv ./store/* ~/.cargo
      - uses: actions/cache@v3
        with:
          path: |
           build/target
          key: ${{ runner.os }}-${{ env.crate }}-${{ env.version }}-stable-x86_64-pc-windows-msvc
      - name: Update Rust
        run: rustup update
      - name: Rust Version
        run: rustc --version
      - name: Build crate
        working-directory: ./build
        run: cargo build --verbose --release 
      - name: Collect
        run: python3  ./scripts/collect.py x86_64-pc-windows-msvc ./build/target/release ${{ env.bins }}
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: x86_64-pc-windows-msvc
          path: |
            x86_64-pc-windows-msvc.tar.gz
            x86_64-pc-windows-msvc.sha256
      - name: Release Artifact
        if: True
        uses: svenstaro/upload-release-action@2.4.0
        with:
          tag: ${{ env.crate }}-${{ env.version }}
          release_name: ${{ env.crate }}-${{ env.version }}
          overwrite: true
          prerelease: true
          file_glob: true
          file: x86_64-pc-windows-msvc.*

  opt-i686-pc-windows-msvc:
    if: True
    runs-on: windows-latest
    needs: [ setup ]
    steps:
      - uses: actions/checkout@v3
      - name: Download crate and deps
        uses: actions/download-artifact@v3
        with:
          name: crate
      - name: Move deps
        run: mv ./store/* ~/.cargo
      - uses: actions/cache@v3
        with:
          path: |
           build/target
          key: ${{ runner.os }}-${{ env.crate }}-${{ env.version }}-stable-i686-pc-windows-msvc
      - name: Update Rust
        run: rustup update
      - name: Rust Version
        run: rustc --version
      - name: Add Rust target
        run: rustup target add i686-pc-windows-msvc
      - name: Build crate
        working-directory: ./build
        run: cargo build --verbose --release --target i686-pc-windows-msvc 
      - name: Collect
        run: python3  ./scripts/collect.py i686-pc-windows-msvc ./build/target/i686-pc-windows-msvc/release ${{ env.bins }}
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: i686-pc-windows-msvc
          path: |
            i686-pc-windows-msvc.tar.gz
            i686-pc-windows-msvc.sha256
      - name: Release Artifact
        if: True
        uses: svenstaro/upload-release-action@2.4.0
        with:
          tag: ${{ env.crate }}-${{ env.version }}
          release_name: ${{ env.crate }}-${{ env.version }}
          overwrite: true
          prerelease: true
          file_glob: true
          file: i686-pc-windows-msvc.*

  cross:
    strategy:
      fail-fast: false
      matrix:
        target: [ x86_64-unknown-linux-musl, aarch64-unknown-linux-gnu, aarch64-unknown-linux-musl ]
    runs-on: ubuntu-latest
    needs: [ setup ]
    env:
      CROSS_CONFIG: ../Cross.toml
    steps:
      - uses: actions/checkout@v3
      - name: Download crate and deps
        uses: actions/download-artifact@v3
        with:
          name: crate
      - name: Move deps
        run: mv ./store/* ~/.cargo
      - uses: actions/cache@v3
        with:
          path: |
           build/target
          key: ${{ runner.os }}-${{ env.crate }}-${{ env.version }}-stable-${{ matrix.target }}
      - name: Update Rust
        run: rustup update
      - name: Rust Version
        run: rustc --version
      - uses: taiki-e/install-action@v2
        with:
          tool: cross
      - name: Build crate
        working-directory: ./build
        run: cross build --verbose --release --target ${{ matrix.target }} 
      - name: Collect
        run: ./scripts/collect.py ${{ matrix.target }} ./build/target/${{ matrix.target }}/release ${{ env.bins }}
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: |
            ${{ matrix.target }}.tar.gz
            ${{ matrix.target }}.sha256
      - name: Release Artifact
        if: True
        uses: svenstaro/upload-release-action@2.4.0
        with:
          tag: ${{ env.crate }}-${{ env.version }}
          release_name: ${{ env.crate }}-${{ env.version }}
          overwrite: true
          prerelease: true
          file_glob: true
          file: ${{ matrix.target }}.*

  opt-cross:
    strategy:
      fail-fast: false
      matrix:
        target: [ x86_64-unknown-freebsd,x86_64-unknown-netbsd,riscv64gc-unknown-linux-gnu,powerpc64-unknown-linux-gnu,powerpc64le-unknown-linux-gnu,s390x-unknown-linux-gnu,mips64-unknown-linux-gnuabi64,mips64-unknown-linux-muslabi64,mips64el-unknown-linux-gnuabi64,mips64el-unknown-linux-muslabi64,i686-unknown-linux-gnu,i686-unknown-linux-musl,i686-unknown-freebsd,armv7-unknown-linux-gnueabihf,armv7-unknown-linux-musleabihf,powerpc-unknown-linux-gnu,mips-unknown-linux-gnu,mips-unknown-linux-musl,mipsel-unknown-linux-gnu,mipsel-unknown-linux-musl ]
    runs-on: ubuntu-latest
    needs: [ setup ]
    env:
      CROSS_CONFIG: ../Cross.toml
    steps:
      - uses: actions/checkout@v3
      - name: Download crate and deps
        uses: actions/download-artifact@v3
        with:
          name: crate
      - name: Move deps
        run: mv ./store/* ~/.cargo
      - uses: actions/cache@v3
        with:
          path: |
           build/target
          key: ${{ runner.os }}-${{ env.crate }}-${{ env.version }}-stable-${{ matrix.target }}
      - name: Update Rust
        run: rustup update
      - name: Rust Version
        run: rustc --version
      - uses: taiki-e/install-action@v2
        with:
          tool: cross
      - name: Build crate
        working-directory: ./build
        run: cross build --verbose --release --target ${{ matrix.target }} 
      - name: Collect
        run: ./scripts/collect.py ${{ matrix.target }} ./build/target/${{ matrix.target }}/release ${{ env.bins }}
      - name: Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: |
            ${{ matrix.target }}.tar.gz
            ${{ matrix.target }}.sha256
      - name: Release Artifact
        if: True
        uses: svenstaro/upload-release-action@2.4.0
        with:
          tag: ${{ env.crate }}-${{ env.version }}
          release_name: ${{ env.crate }}-${{ env.version }}
          overwrite: true
          prerelease: true
          file_glob: true
          file: ${{ matrix.target }}.*

  push-index:
    if: True
    runs-on: ubuntu-latest
    needs: [ setup, x86_64-unknown-linux-gnu, x86_64-apple-darwin, aarch64-apple-darwin, x86_64-pc-windows-msvc, cross ]
    steps:
      - uses: actions/checkout@v3
      - name: Create index file
        run: echo "${{ env.version }}" > ${{ env.crate }}
      - name: Push to index
        uses: svenstaro/upload-release-action@2.4.0
        with:
          tag: stable-index
          overwrite: true
          file: ${{ env.crate }}
